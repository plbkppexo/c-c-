(36)
แปลงรูปแบบ 12-hour เป็น 24-hour
จงเขียนโปรแกรมที่รับเวลาในรูปแบบ 12-hour (เช่น 12:59 pm โดยคำว่า am/pm เป็น upper/lower case ก็ได้) แล้วแสดงผลลัพธ์เป็นเวลาเดียวกันในรูปแบบ 24-hour ดังตัวอย่าง

ตัวอย่างผลลัพธ์ที่ 1
Enter a 12-hour time [eg. 12:34 am]: 11:11 PM
Equivalent 24-hour time: 23:11

ตัวอย่างผลลัพธ์ที่ 2
Enter a 12-hour time [eg. 12:34 am]: 1:23 am
Equivalent 24-hour time: 01:23

ตัวอย่างผลลัพธ์ที่ 3
Enter a 12-hour time [eg. 12:34 am]: 12:00 am
Equivalent 24-hour time: 00:00

ตัวอย่างผลลัพธ์ที่ 4
Enter a 12-hour time [eg. 12:34 am]: 12:05 PM
Equivalent 24-hour time: 12:05

(37)
เขียนโปรแกรมภาษาซี เพื่อคำนวณ GPA ในภาคการศึกษาหนึ่ง ของนิสิตหนึ่งคน โดยกำหนดให้ รับจำนวนวิชาที่เรียนทั้งหมดในภาคการศึกษาก่อน (จำนวนวิชาอย่างน้อย 1 วิชา) แล้วจึงรับ จำนวนหน่วยกิต และเกรด (เกรดที่โปรแกรมยอมรับ คือ A,a,B,b,C,c,D,d,F และ f เท่านั้น) ของแต่ละวิชา ในรูปแบบ credit,grade ให้ครบตามจำนวนวิชา แสดงผลดังรูปแบบในตัวอย่าง

ให้น้ำหนักของเกรด A, B, C, D, F เป็น 4, 3, 2, 1, 0 ตามลำดับ

ตัวอย่างที่ 1

Enter number of subject(s): 1
Enter credit,grade for subject #1: 4,b
GPA = 3.00
ตัวอย่างที่ 2

Enter number of subject(s): 8
Enter credit,grade for subject #1: 3,b
Enter credit,grade for subject #2: 3,b
Enter credit,grade for subject #3: 4,a
Enter credit,grade for subject #4: 3,a
Enter credit,grade for subject #5: 3,b
Enter credit,grade for subject #6: 3,A
Enter credit,grade for subject #7: 1,A
Enter credit,grade for subject #8: 1,a
GPA = 3.57

(38)
Sieve of Erasthanos
เป็นวิธีการหาค่า prime ตั้งแต่ 2 ถึง n เมื่อ n เป็นจำนวนเต็มบวก โดยเป็นการตัดค่าที่ไม่ใช่ prime ออกไปเรื่อยๆ ซึ่งมีวิธีการดังนี้

1. สร้างอาร์เรย์เก็บค่าตั้งแต่ 2 - n
2. เริ่มต้นที่ค่า p = 2
3. ตัดค่าที่ p หารลงตัวออกให้หมด
4 .หาค่าต่อไปในอาร์เรย์ที่ยังไม่ถูกตัด ค่านี้เป็น prime ตัวต่อไป
5 .ทำข้อ 3-4 ซ้ำจน p ยกกำลัง 2 มากกว่า n
6 .ค่าที่เหลือเป็น prime

จงเขียนโปรแกรมหา prime เมื่อ n = 97 ด้วยวิธีนี้

ดูตัวอย่างการทำงานของโปรแกรมนี้ได้ที่ http://upload.wikimedia.org/wikipedia/commons/8/8c/New_Animation_Sieve_of_Eratosthenes.gif

(39)
ตารางหมากรุก
หมากรุกสากลเป็นเกมส์กระดานแนววางแผนสองผู้เล่น ที่เล่นบนกระดานสลับสีซึ่งมีจัตุรัส 64 ช่อง จัดเรียงแบบ 8x8 ช่อง
ประกอบด้วยตัวหมาก 6 ประเภท คือ King (ราชา), Queen (ราชินี), Knight (อัศวิน), Bishop (นักบวช), Rook (เรือ) และ Pawn (เบี้ย)

ให้เขียนโปรแกรมเพื่อแสดงตำแหน่งของตัวหมากบนตารางหมากรุกสากลในเกมหนึ่ง
โดย บรรทัดที่ 1 รับจำนวนเต็ม numPieces ที่แสดงจำนวนตัวหมากที่เหลืออยู่บนกระดาน
บรรทัดที่ 2 ถึง บรรทัดที่ numPieces + 1 รับตัวอักษร pieceChar ที่แทนตัวหมากและพิกัด x, y บนกระดาน ในรูปแบบ pieceChar(x, y) (พิกัดมุมซ้ายบนของตารางคือ 0, 0 และ พิกัดมุมขวาล่างของตารางคือ 7, 7)

ตัวอักษร pieceChar ที่แทนตัวหมากมีความหมายดังนี้

K แทน King
Q แทน Queen
N แทน Knight
B แทน Bishop
R แทน Rook
P แทน Pawn
ตัวอักษรตัวใหญ่ แทน ตัวหมากของผู้เล่น 1 และ ตัวอักษรตัวเล็ก แทน ตัวหมากของผู้เล่น 2

บรรทัดที่ numPieces + 2 เป็นต้นไป แสดงตำแหน่งของตัวหมากบนตาราง

ตัวอย่างโปรแกรม
4
k(4, 0)
K(4, 7)
b(3, 4)
B(4, 5)
------------------
  0 1 2 3 4 5 6 7
0| | | | |k| | | |
1| | | | | | | | |
2| | | | | | | | |
3| | | | | | | | |
4| | | |b| | | | |
5| | | | |B| | | |
6| | | | | | | | |
7| | | | |K| | | |

(40)
เส้นทางแห่งนักบวช
หมากรุกสากลเป็นเกมส์ที่เล่นบนกระดานตารางขนาด 8x8 ช่อง โดยตัวนักบวช (Bishop) นั้นสามารถเดินเป็นเฉียงได้สี่ทิศทาง (ซ้ายบน ขวาบน ซ้ายล่าง ขวาล่าง) และระยะการเดินนั้นไม่จำกัด (ยกเว้นสุดขอบกระดาน) ให้นิสิตเขียนฟังก์ชัน bishopMoves() ซึ่งรับตำแหน่งของนักบวชมา แล้วกำหนดตำแหน่งที่นักบวชเดินไปได้ โดยกำหนดให้ช่องซ้ายบนสุดมีตำแหน่งเป็น 0 0 และช่องขวามือล่างสุดมีตำแหน่งเป็น 7 7

จากนั้นให้นิสิตพิมพ์ตารางหมากรุกโดยแสดงตำแหน่งของนักบวชด้วยอักษร B และแสดงตำแหน่งที่นักบวชเดินไปได้ด้วยอักษร X ถ้านักบวชเดินไปยังตำแหน่งนั้นไม่ได้ให้พิมพ์ช่องว่าง (space bar)

ตัวอย่างผลลัพธ์ที่ 1
Enter Bishop's X Y position: 3 4
  0 1 2 3 4 5 6 7
------------------
0| | | | | | | |X|
------------------
1|X| | | | | |X| |
------------------
2| |X| | | |X| | |
------------------
3| | |X| |X| | | |
------------------
4| | | |B| | | | |
------------------
5| | |X| |X| | | |
------------------
6| |X| | | |X| | |
------------------
7|X| | | | | |X| |

(41)
ให้เติมส่วนของโปรแกรมที่มีการเก็บข้อความ "Computer Programming"
และให้โปรแกรมแสดงข้อความตามตัวอย่าง โดยใช้หลักการของ pointer

Sample Output
Computer Programming
ter Programming
 Programming

(42)
หมวกคัดสรร
ณ โรงเรียนสอนเวทมนตร์ศาสตร์แห่งหนึ่ง นักเรียนที่ได้รับเลือกเพื่อเข้าเรียนในชั้นปีที่ 1 ของโรงเรียน จะต้องถูกคัดเลือกเข้าไปอยู่ประจำบ้านต่าง ๆ ด้วยหมวกคัดสรร
โดยจะต้องคัดเลือกทีละคน จากรายชื่อที่อยู่ในมือของศาสตราจารย์ท่านหนึ่ง
นักเรียน num คนที่ได้รับคัดเลือกให้เข้าเรียน จะมีหมายเลขประจำตัวตั้งแต่ 1 ถึง num แต่การเรียกชื่อจะขึ้นอยู่กับดุลยพินิจของศาสตราจารย์

จงเขียนโปรแกรมเพื่อแสดงคนที่เหลืออยู่ในแถวตามลำดับ โดยเริ่มต้น บรรทัดที่ 1 จะรับจำนวนเต็มบวก num (num <= 100) ซึ่งเป็นจำนวนนักเรียนทั้งหมด
จากนั้น บรรทัดที่ 2 จะรับจำนวนเต็มบวก count (count <= num) ซึ่งเป็นจำนวนนักเรียนที่จะถูกคัดเลือกด้วยหมวกคัดสรร
และ บรรทัดที่ 3 จะรับจำนวนเต็มบวก count จำนวน คั่นด้วย space ซึ่งเป็นหมายเลขประจำตัวนักเรียนที่ถูกคัดเลือกด้วยหมวกคัดสรร

เขียนฟังก์ชัน removeTarget(int *array, int size, int target) เพื่อลบ target ออกจาก array ที่ส่งเข้ามา และต่อท้าย array ด้วย 0

ตัวอย่างโปรแกรม 1
10
2
1 10
2 3 4 5 6 7 8 9 0 0

ตัวอย่างโปรแกรม 2
14
4
9 10 13 14
1 2 3 4 5 6 7 8 11 12 0 0 0 0 

(43)
นักโทษแห่งอัซคาบัน
อัซคาบัน เป็นสถานที่กักกันและลงโทษผู้ที่ถูกตัดสินว่ามีความผิดร้ายแรงในโลกเวทมนตร์ ในแต่ละวันจะต้องมีนักโทษจำนวนหนึ่งถูกประหารชีวิตด้วยจุมพิตของผู้คุมวิญญาณ โดยจะสุ่มเลือกนักโทษมา numPrisoners คน ตั้งแต่ 5 คนขึ้นไป แต่ไม่เกิน 100 คน และให้แต่ละคนมีหมายเลข 1 ถึง numPrisoners จากนั้นผู้คุมวิญญาณจะสุ่มเลข m ซึ่งมีค่าตั้งแต่ 2 ถึง 5

ในการประหารชีวิตนักโทษ นักโทษจะถูกจับให้เข้าแถวเป็นวงกลม เริ่มจากคนที่ได้รับหมายเลข 1 ไล่ไปจนถึง numPrisoners ` จากนั้นจะให้นับเลข 1, 2, ..., m ไปตามลำดับ หากใครนับเลขตรงกับเลข m จะถูกนำตัวไปประหารทันที

เขียนโปรแกรมเพื่อแสดงลำดับหมายเลขของนักโทษแห่งอัซคาบันที่ถูกนำไปประหารจากคนแรกไปหาคนสุดท้ายตามลำดับ
โดยโปรแกรมจะรับข้อมูลดังนี้
บรรทัดที่ 1 รับจำนวนเต็มบวก numPrisoners
บรรทัดที่ 2 รับจำนวนเต็มบวก m

ตัวอย่างโปรแกรม 1

10
3
3 6 9 2 7 1 8 5 10 4
ตัวอย่างโปรแกรม 2

10
4
4 8 2 7 3 10 9 1 6 5


