(14)
Write a program that get an integer n and print the number from n down to 0 if n >= 0

Example 1
13
13
12
11
10
9
8
7
6
5
4
3
2
1
0

Example 2
0
0

Example 3
-1

Example 4
1
1
0

(15)
ให้เขียนโปรแกรมเพื่อรับค่าจำนวนเต็มบวก 2 จำนวน M, N จากผู้ใช้ บรรทัดละจำนวน
จากนั้นแสดงจำนวนเต็มบวกที่มากที่สุดที่หาร M และ N ลงตัว (ห.ร.ม. - GCD) และจำนวนเต็มบวกที่น้อยที่สุดที่ M และ N หารลงตัว (ค.ร.น. - LCM)

ตัวอย่างโปรแกรม 1
10
15
GCD: 5
LCM: 30

ตัวอย่างโปรแกรม 2
1585
3261
GCD: 1
LCM: 5168685

ตัวอย่างโปรแกรม 3
138583
262211
GCD: 997
LCM: 36447329

หมายเหตุ
- ข้อมูลนำเข้าที่ใช้เป็นชุดทดสอบ มีค่าไม่เกิน 1,000,000,000
- LCM ในชุดทดสอบ มีค่าไม่เกิน 4,000,000,000
Hint
- ใช้ atoll() ในการเปลี่ยน input เป็น long long
- GCD จะไม่เกินจำนวนเต็มบวก M หรือ N แต่ LCM จะไม่ต่ำกว่าจำนวนเต็มบวก M หรือ N ดังนั้น ไม่ควรให้โปรแกรมหา LCM ก่อน
- วิธีหา GCD ที่มีประสิทธิภาพ คือ Euclidean algorithm
- จาก Hint แรก ควรหา LCM จากความสัมพันธ์ M * N = GCD * LCM

(16)
เขียนโปรแกรมเพื่อรับค่าเศษส่วนในรูป a/b เมื่อ a และ b เป็นจำนวนเต็มบวกใด ๆ โดย a และ b มีค่าไม่เกิน 10000 บรรทัดแรกเป็นค่าเศษ a และบรรทัดที่สองเป็นค่าส่วน b
จากนั้นแสดงเศษส่วนอย่างต่ำของเศษส่วนดังกล่าว

เศษส่วนอย่างต่ำ คือ เศษส่วนที่อยู่ในรูป p/q โดย ห.ร.ม. ของ p และ q เป็น 1
กรณีที่ตัวส่วนของเศษส่วนอย่างต่ำ มีค่าเป็น 1 จะแสดงเฉพาะตัวเศษ
เศษส่วนอย่างต่ำ อาจอยู่ในรูป เศษส่วนแท้ หรือ เศษเกิน ก็ได้

ตัวอย่างโปรแกรม 1
108
96
= 9/8

ตัวอย่างโปรแกรม 2
25
5
= 5

(17)
พิจารณาลำดับต่อไปนี้

 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ... 
ลำดับดังกล่าวมีชื่อเรียกว่า "ลำดับฟีโบนัชชี (Fibonacci's sequence" !!
คุณอาจทราบมาว่าลำดับที่ n ของฟีโบนัชชีหาได้จาก F(n) = F(n-2) + F(n-1) โดย F(0) = 0 และ F(1) = 1
แต่ลำดับที่ n ของฟีโบนัชชี สามารถคำนวณจากสูตรต่อไปนี้

จงเขียนฟังก์ชัน int fibo(int n) เพื่อคำนวณเลขฟีโบนัชชีลำดับที่ n
และใช้ฟังก์ชันดังกล่าว แสดงเลขฟีโบนัชชีลำดับที่ 0 ถึงลำดับที่ n เมื่อ n คือข้อมูลนำเข้า ซึ่งเป็นจำนวนเต็ม และ n >= 0

Sample output 1:
3
F(0) = 0
F(1) = 1
F(2) = 1
F(3) = 2
Sample output 2:
8
F(0) = 0
F(1) = 1
F(2) = 1
F(3) = 2
F(4) = 3
F(5) = 5
F(6) = 8
F(7) = 13
F(8) = 21

(18)
เขียนโปรแกรมเพื่อรับจำนวนเต็มบวก N (N <= 26) เพื่อแสดงรูปแบบสะท้อนขนาด N ของชุดตัวอักษร

รูปแบบสะท้อนมีลักษณะดังนี้

#size N = 3
c-b-a-b-c

#size N = 5
e-d-c-b-a-b-c-d-e

#size N = 10
j-i-h-g-f-e-d-c-b-a-b-c-d-e-f-g-h-i-j

หมายเหตุ

หากไม่สามารถสร้างรูปแบบสะท้อนขนาด N ของชุดตัวอักษรได้ ให้พิมพ์ -
ให้ใช้ Loop ในการแสดงรูปแบบสะท้อนดังกล่าว

ตัวอย่างโปรแกรม 1
3
c-b-a-b-c

ตัวอย่างโปรแกรม 2
5
e-d-c-b-a-b-c-d-e

ตัวอย่างโปรแกรม 3
0
-

Hint
ในภาษาซี สามารถแปลง character เป็น ascii code ด้วยวิธีนี้

int code;
code = (int)'a'; // code = 97
code = 'a'; // code = 97
printf("%d", 'a'); // 97
ในทำนองเดียวกัน สามารถแปลง ascii code เป็น character ด้วยวิธีนี้
char c;
c = (char)97; // c = 'a'
c = 97; // c = 'a'
printf("%c", 97); // a

(19)
พื้นฐาน Switch / Case
โจทย์ข้อนี้ต้องการให้นิสิตสามารถเขียนคำสั่ง Switch / Case พื้นฐานได้ โดยจะให้สร้างโปรแกรมคำนวณค่าทางคณิตศาสตร์ โดยเริ่มต้นผู้ใช้งานจะใส่ค่าสองค่าเข้าไปก่อน (x กับ y) จากนั้นจะมีเมนูมาให้เลือกว่าจะคำนวณค่าอะไร

ตัวอย่างผลลัพธ์ที่ 1
Input x: 15
Input y: 2
x = 15.0000, y = 2.0000
[a]:Add [s]:Subtract [m]:Multiply [d]:Divide [M]:modulo [^]: x ^ y
Command? a
x + y = 17.0000

ตัวอย่างผลลัพธ์ที่ 2
Input x: 3.1416
Input y: 2.5
x = 3.1416, y = 2.5000
[a]:Add [s]:Subtract [m]:Multiply [d]:Divide [M]:modulo [^]: x ^ y
Command? ^
x ^ y = 17.4935

ตัวอย่างผลลัพธ์ที่ 3
Input x: 15
Input y: 2
x = 15.0000, y = 2.0000
[a]:Add [s]:Subtract [m]:Multiply [d]:Divide [M]:modulo [^]: x ^ y
Command? m
x * y = 30.0000

ตัวอย่างผลลัพธ์ที่ 4
Input x: 22.5
Input y: 1.8
x = 22.5000, y = 1.8000
[a]:Add [s]:Subtract [m]:Multiply [d]:Divide [M]:modulo [^]: x ^ y
Command? M
x mod y = 0.9000