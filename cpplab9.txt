(72)
ให้เขียนโปรแกรมภาษา C++ เพื่อรับจำนวนเต็มบวกจำนวนหนึ่ง แล้วหาว่าจะต้องใช้กี่ขั้นตอนเพื่อจะลดจำนวนดังกล่าวให้เหลือศูนย์

โดยมีกฎการลดจำนวนในแต่ละขั้นตอนคือ ถ้าจำนวนดังกล่าวเป็นจำนวนคู่ ให้หารจำนวนดังกล่าวด้วย 2 แต่ถ้าไม่ใช่จำนวนคู่ให้หักออก 1 จากจำนวนดังกล่าว

ตัวอย่างข้อมูลเข้า/ข้อมูลออก
14
6
อธิบาย
14 เป็นจำนวนคู่ ให้หารด้วย 2 เหลือ 7
7 เป็นจำนวนคี่ ให้หักออก 1 เหลือ 6
6 เป็นจำนวนคู่ ให้หารด้วย 2 เหลือ 3
3 เป็นจำนวนคี่ ให้หักออก 1 เหลือ 2
2 เป็นจำนวนคู่ ให้หารด้วย 2 เหลือ 1
1 เป็นจำนวนคี่ ให้หักออก 1 เหลือ 0 สิ้นสุดการทำงาน ใช้ทั้งหมด 6 ขั้นตอน

(73)
ให้เขียนโปรแกรมภาษา C++ เพื่อคำนวณเงินได้รายปีของพนักงานขายสินค้าคนหนึ่ง
โดยมีบันทึกข้อมูลของเงินเดือน และมูลค่าสินค้าที่พนักงานขายได้ในแต่ละเดือน
ระหว่างปีนี้ ไม่มีการขึ้นเงินเดือน และพนักงานขายจะได้เงินได้เพิ่มขึ้นอีก 15% จากมูลค่าสินค้าที่ขายได้ในแต่ละเดือน

ข้อมูลเข้า
บรรทัดแรก เป็นชื่อของพนักงาน
บรรทัดที่สอง เป็นเงินเดือนของพนักงาน (ทศนิยม 2 ตำแหน่ง)
อีก 12 บรรทัดต่อมา เป็นมูลค่าสินค้าที่พนักงานขายได้ในแต่ละเดือนใน 1 ปี
ข้อมูลออก
บรรทัดเดียว แสดงชื่อของพนักงาน และรายได้ทั้งปีของพนักงาน (ทศนิยม 2 ตำแหน่ง โดยใช้ sprintf) คั่นด้วยช่องว่าง

ตัวอย่างข้อมูลเข้า/ข้อมูลออก 1
Peter
12500.00
10000.00
10000.00
10000.00
10000.00
10000.00
10000.00
10000.00
10000.00
10000.00
10000.00
10000.00
10000.00
Peter 168000.00

ตัวอย่างข้อมูลเข้า/ข้อมูลออก 2
Wisdom
13090.00
2112.00
14325.00
8712.00
6344.00
11437.00
12312.50
9488.25
21000.00
16290.00
15800.00
10033.00
8547.00
Wisdom 177540.11

(74)
[C++]

ณ เรือนจำแห่งหนึ่ง มีการระบุตัวนักโทษ โดยใช้หมายเลขจำนวนเต็มบวกแทนชื่อของนักโทษ เริ่มตั้งแต่หมายเลข 1, 2, 3, ..., n หมายเลขจะแปะอยู่ที่เสื้อของนักโทษ

ทุกเช้าจะมีการเช็คชื่อ โดยใช้กล้องสแกนหมายเลขบนเสื้อของนักโทษ ให้นิสิตหาว่านักโทษหมายเลขใดหายไปจากการเช็คชื่อในเช้าวันนี้บ้าง

ข้อมูลเข้า
บรรทัดแรก เป็นจำนวนของนักโทษ ที่กล้องสามารถสแกนหมายเลขบนเสื้อได้
บรรทัดต่อมา เป็นหมายเลขที่กล้องสามารถสแกนได้ คั่นแต่ละหมายเลขด้วยช่องว่าง โดยนักโทษหมายเลข n จะถูกสแกนได้เสมอ
ข้อมูลออก
บรรทัดแรก แสดงหมายเลขของนักโทษที่หายไป เฉพาะหมายเลขคี่ เรียงตามลำดับจากน้อยไปมาก คั่นด้วยช่องว่าง
บรรทัดที่สอง แสดงหมายเลขของนักโทษที่หายไป เฉพาะหมายเลขคู่ เรียงตามลำดับจากน้อยไปมาก คั่นด้วยช่องว่าง

ตัวอย่างข้อมูลเข้า/ข้อมูลออก
15
7 1 4 18 9 3 8 2 5 14 20 19 12 11 13
15 17 
6 10 16

(75)
Word Count (C++)

จงเขียนโปรแกรมภาษา C++ ในการนับจำนวนคำที่ได้รับมาจากผู้ใช้งาน โดยผู้ใช้งานจะป้อนคำเข้ามาในระบบเรื่อย ๆ
โปรแกรมสามารถบันทึกข้อมูลจำนวนคำที่ไม่ซ้ำกันได้ไม่เกิน 20 คำ (array data) และแต่ละคำ (word) มีความยาวไม่เกิน 20 ตัวอักษร
เมื่อผู้ใช้งานป้อนคำเข้าไปในระบบจนพอใจแล้วให้ หยุดโปรแกรมโดยการพิมพ์คำว่า exit
โปรแกรมจะหยุดทำงานพร้อมกับพิมพ์คำ (word) และจำนวนคำ (count) ที่ได้รับเข้ามาในระบบ

ตัวอย่าง 1
This
Is
BOOK
Book
Hello
Hello
Hello
exit

Output:
This = 1
Is = 1
BOOK = 1
Book = 1
Hello = 3

ตัวอย่าง 2
one
one
one
exit

Output:
one = 3

(76)
โปรแกรมเก็บข้อมูลสินค้าขนาดไม่จำกัด (ภาษา C)

โปรแกรมในข้อนี้เป็นโปรแกรมที่ใช้ในการเก็บชื่อของสินค้าความยาวไม่เกิน 20 อักขระ โดยโปรแกรมสามารถเก็บข้อมูลสินค้าในหน่วยความจำของคอมพิวเตอร์โดยใช้โครงสร้างข้อมูลแบบ Linkedlist ผู้ใช้งานโปรแกรมสามารถพิมพ์รายชื่อสินค้าได้โดยไม่จำกัดจำนวน เมื่อใส่รายชื่อสินค้าจนพอใจแล้วให้พิมพ์คำสั่ง done เพื่อทำการจบการทำงานของโปรแกรม

ให้นักเรียนทำความเข้าใจการทำงานของโปรแกรมและเขียนฟังก์ชัน print_all_goods() ให้สมบูรณ์ โดยฟังก์ชัน print_all_goods() จะทำการพิมพ์ข้อมูลสินค้าทั้งหมดที่เก็บอยู่ใน Linkedlist พร้อมทั้ง return ค่าออกมาเป็นจำนวนรายชื่อสินค้าทั้งหมดใน Linkedlist

ตัวอย่าง 1
Name: Good1
Name: Good2
Name: done
Good1
Good2
Total = 2

ตัวอย่าง 2
Name: Lay
Name: Pepsi
Name: Fanta
Name: Taro
Name: Pocky
Name: done
Lay
Pepsi
Fanta
Taro
Pocky
Total = 5

(77)
สร้างรายการเชื่อมต่อแบบเรียงลำดับข้อมูล (ภาษา C)
ให้ผู้เรียนสร้างโครงสร้างข้อมูลแบบ linked list (ใช้วิธีใดก็ได้) สำหรับข้อมูลประเภทจำนวนเต็มและข้อมูลใน linked list ต้องเรียงลำดับจากน้อยไปมาก พร้อมสร้างฟังก์ชั่นในการจัดการ 3 ฟังก์ชั่น คือ insert delete และ print

insert รับค่าเป็นจำนวนเต็มหนึ่งตัวเพื่อเพิ่มเข้าไปใน linked list
delete รับค่าเป็นจำนวนเต็มหนึ่งตัวเพื่อลบข้อมูลทุกตัวที่มีค่าเท่ากับจำนวนเต็มนั้น
print แสดงข้อมูลทั้งหมดใน linked list (แสดงออกทาง stdout หนึ่งบรรทัด)
โปรแกรมจะรับคำสั่งผ่านทาง stdin โดยคำสั่งมีทั้งหมด 4 คำสั่งคือ

i k เป็นคำสั่ง insert: เพิ่มข้อมูล k เข้าไปใน linked list
d k เป็นคำสั่ง delete: ลบข้อมูลที่มีค่าเท่ากับ k ทุกตัวออกจาก linked list
p เป็นคำสั่ง print: แสดงข้อมูล
q เป็นคำสั่ง quit: จบการทำงาน

ตัวอย่างข้อมูลส่งออก
input> p
[ ]
input> i 5
input> i 4
input> i 1
input> p
[ 1 4 5 ]
input> i 10
input> i 4
input> d 4
input> d 2
input> i 9
input> d 5
input> i 6
input> p
[ 1 6 9 10 ]
input>q

(78)
Hashing - Chaining (ภาษา C)
เขียนโปรแกรมทดสอบการเก็บข้อมูลเลขจำนวนเต็มลงใน hash table ที่มีการแก้ไขการชนแบบ chaining โดยใช้ hash function เป็นการ modulo ด้วย 97 ซึ่งโปรแกรมจะคอยรับคำสั่งจากผู้ใช้ คำสั่งที่ใช้ได้ทั้งหมดมี 3 คำสั่งดังนี้

    p
        เป็นคำสั่ง แสดงข้อมูลใน hash table ตามรูปแบบดังตัวอย่าง

    a x
        เป็นคำสั่ง add เลขจำนวนเต็มบวก x ลงในตาราง hash table โดยเพิ่มเข้าที่หัวตาราง

    q
        เป็นคำสั่ง จบการทำงานของโปรแกรม

การ add ถ้าทำไม่ได้ ไม่ต้องแสดงข้อความใด ๆ ทั้งสิ้น

และกำหนดให้ข้อมูลจำนวนเต็มบวก ต้องเก็บใน struct Node

ตัวอย่างที่ 1 เป็นการกำหนดให้ hash table มีขนาดเท่ากับ 7 และ hash function เป็นการ modulo ด้วย 7

ตัวอย่างผลลัพธ์ที่ 1
input> a 42
input> a 53
input> a 66
input> a 28
input> a 59
input> a 91
input> p
KEY  0: 91 28 42 
KEY  1: 
KEY  2: 
KEY  3: 59 66 
KEY  4: 53 
KEY  5: 
KEY  6: 
input> a 66
input> a 28
input> p
KEY  0: 28 91 28 42 
KEY  1: 
KEY  2: 
KEY  3: 66 59 66 
KEY  4: 53 
KEY  5: 
KEY  6: 
input> q

ตัวอย่างที่ 2 เป็นการกำหนดให้ hash table มีขนาดเท่ากับ 97 และ hash function เป็นการ modulo ด้วย 97

ตัวอย่างผลลัพธ์ที่ 2
input> a 4675
input> a 7641
input> a 5467
input> a 3375
input> a 6831
input> a 3021
input> a 3118
input> p
KEY  0: 
KEY  1: 
KEY  2: 
KEY  3: 
KEY  4: 
KEY  5: 
KEY  6: 
KEY  7: 
KEY  8: 
KEY  9: 
KEY 10: 
KEY 11: 
KEY 12: 
KEY 13: 
KEY 14: 3118 3021 
KEY 15: 
KEY 16: 
KEY 17: 
KEY 18: 
KEY 19: 4675 
KEY 20: 
KEY 21: 
KEY 22: 
KEY 23: 
KEY 24: 
KEY 25: 
KEY 26: 
KEY 27: 
KEY 28: 
KEY 29: 
KEY 30: 
KEY 31: 
KEY 32: 
KEY 33: 
KEY 34: 
KEY 35: 5467 
KEY 36: 
KEY 37: 
KEY 38: 
KEY 39: 
KEY 40: 
KEY 41: 6831 
KEY 42: 
KEY 43: 
KEY 44: 
KEY 45: 
KEY 46: 
KEY 47: 
KEY 48: 
KEY 49: 
KEY 50: 
KEY 51: 
KEY 52: 
KEY 53: 
KEY 54: 
KEY 55: 
KEY 56: 
KEY 57: 
KEY 58: 
KEY 59: 
KEY 60: 
KEY 61: 
KEY 62: 
KEY 63: 
KEY 64: 
KEY 65: 
KEY 66: 
KEY 67: 
KEY 68: 
KEY 69: 
KEY 70: 
KEY 71: 
KEY 72: 
KEY 73: 
KEY 74: 
KEY 75: 7641 
KEY 76: 
KEY 77: 3375 
KEY 78: 
KEY 79: 
KEY 80: 
KEY 81: 
KEY 82: 
KEY 83: 
KEY 84: 
KEY 85: 
KEY 86: 
KEY 87: 
KEY 88: 
KEY 89: 
KEY 90: 
KEY 91: 
KEY 92: 
KEY 93: 
KEY 94: 
KEY 95: 
KEY 96: 
input> q