(58)
กำหนดโครงสร้างข้อมูล struct
ให้กำหนดโครงสร้างข้อมูล struct ที่ใช้เก็บข้อมูลเกี่ยวกับโทรศัพท์มือถือ ซึ่งมีชื่อฟิลด์และรายละเอียดข้อมูลด้งต่อไปนี้:

name - ชื่อเจ้าของโทรศัพท์ ซึ่งมีชนิดข้อมูลเป็นอะเรย์ของตัวอักษรจำนวนไม่เกิน 40 ตัว
brand - ยี่ห้อของโทรศัพท์ ซึ่งมีชนิดข้อมูลเป็นอะเรย์ของตัวอักษรจำนวนไม่เกิน 20 ตัว
calls - จำนวนครั้งที่เคยโทรออก
price - ราคาของโทรศัพท์ที่ยังไม่รวมภาษีมูลค่าเพิ่ม
vat - ภาษีมูลค่าเพิ่ม

(59)
ค้นหาและใส่คะแนน
ให้นิสิตสร้าง struct ของ studentRecord ซึ่งมี data member 2 ตัว คือ id ซึ่งเป็น string ขนาด 12 ตัวอักษรเก็บรหัสนิสิต และ score ซึ่งเป็นเลขจำนวนเต็มเก็บคะแนนของนิสิต

จากนั้นให้เขียนฟังก์ชันชื่อ init() ซึ่งจะใส่ข้อมูลของนิสิต 3 คน โดยใส่รหัสนิสิตเป็น “55100001”, “55100002”, และ “55100003” ตามลำดับ และใส่คะแนนของนิสิตเป็น 0 ไว้ก่อน

จากนั้นให้เขียนฟังก์ชันชื่อ enterScore() ซึ่งจะรับข้อมูลจากผู้ใช้มาสองค่า คือรหัสกับคะแนน (จาก standard input) เป็นจำนวน size บรรทัด คั่นรหัสนิสิตและคะแนนด้วยช่องว่าง
ฟังก์ชันนี้จะต้องนำคะแนนไปใส่ใน struct ของรหัสนิสิตให้ถูกต้อง
ผู้ใช้สามารถใส่รหัสนิสิตแค่บางส่วนได้ เช่นถ้าจะกรอกคะแนนของนิสิตรหัส 55100001 นั้นผู้ใช้สามารถพิมพ์แค่ 01 หรือ 001 หรือ 0001 หรือ 00001 ตามด้วยคะแนน ก็สามารถกรอกคะแนนได้ กำหนดว่ารหัสบางส่วนที่กรอกเข้ามาจะไม่คลุมเครือ (นั่นคือไม่ไปตรงกับบันทึกของนิสิตมากกว่า 1 คน) แต่อาจจะไม่มีนิสิตที่มีรหัสนั้น

นิสิตสามารถใช้ฟังก์ชันที่อยู่ใน string.h ช่วยในการเขียนโปรแกรมได้

ตัวอย่าง 1
01 50
   ID        Score
55100001       50
55100002       0
55100003       0

ตัวอย่าง 2
002 75
   ID        Score
55100001       0
55100002       75
55100003       0

หมายเหตุ: นิสิตสามารถเขียนฟังก์ชัน printRecords() ไว้ทดสอบเองได้ ตอนตรวจอาจารย์จะมีฟังก์ชัน printRecords() ของอาจารย์เอง
ดังนั้นนิสิตจึงไม่จำเป็นต้องระวังเรื่องรูปแบบการแสดงผลของ printRecords() แต่นิสิตต้องสร้าง struct ให้ถูกต้องตามข้อกำหนดไม่อย่างนั้นฟังก์ชัน printRecords() ของอาจารย์จะใช้ struct ของนิสิตไม่ได้

การตรวจจะทำเป็นส่วน คือจะตรวจฟังก์ชัน init() ก่อน ถ้าถูกต้องก็จะให้คะแนนส่วนหนึ่ง จากนั้นค่อยตรวจฟังก์ชัน enterScore() ดังนั้นนิสิตควรพยายามเขียนฟังก์ชัน init() ให้ได้เป็นอย่างน้อย

(60)
ถ้ากำหนดให้เวกเตอร์ vec{u} = (u_x,u_y,u_z) และเวกเตอร์ vec{v} = (v_x,v_y,v_z), ค่า cross product ระหว่างเวกเตอร์ vec{u} และเวกเตอร์ vec{v}, ซึ่งสามารถเขียนอยู่ในรูปของ vec{u} * vec{v} , จะมีค่าเป็นเวกเตอร์ซึ่งมีค่าเท่ากับ:

vec{u} * vec{v} = (u_y * v_z - u_z * v_y, u_z * v_x - u_x * v_z, u_x * v_y - u_y * v_x)
จงเติมโปรแกรมข้างล่างให้สมบูรณ์เพื่อคำนวณหาค่า cross product ระหว่าง 2 เวกเตอร์ที่รับค่าเข้ามา

ตัวอย่างผลลัพธ์ที่ 1
Enter u: 1 2 3
Enter v: 2 3 4
u x v = -1.0 2.0 -1.0

ตัวอย่างผลลัพธ์ที่ 2
Enter u: 1.0 2.5 3.5
Enter v: 0.0 0.0 1.0
u x v = 2.5 -1.0 0.0

(61)
คำนวณเกรดโดยเก็บข้อมูลใน struct
จงเขียนโปรแกรมคำนวณเกรด โดยให้นิยาม struct ที่ใช้เก็บคะแนนสอบของนิสิต และสร้าง array ของ struct นี้ขึ้นมาโดยมีขนาด 5 elements รับข้อมูลเข้าจากผู้ใช้ โดยจะมีข้อมูล ID ของนิสิต คะแนนสอบมิดเทอมและไฟนอล จากนั้นให้เรียกฟังก์ชัน calculateGrade ซึ่งจะคำนวณเกรดให้โดยมีหลักการดังนี้

ถ้าคะแนนเท่ากับ 80 คะแนนหรือมากกว่า นิสิตจะได้เกรด A
ถ้าคะแนนเท่ากับ 70 ถึง 79 คะแนนจะได้เกรด B
ถ้าคะแนนเท่ากับ 60 ถึง 69 คะแนนจะได้เกรด C
ถ้าคะแนนเท่ากับ 50 ถึง 59 คะแนนจะได้เกรด D
ถ้าคะแนนต่ำกว่านั้นจะได้เกรด F
จากนั้นให้พิมพ์ ID และเกรดของนิสิตทีละคนเรียงตามลำดับข้อมูลที่นำเข้า

ตัวอย่างผลลัพธ์ที่ 1
Enter Student ID: 5610456784
Enter Student Midterm: 26
Enter Student Final: 37
Enter Student ID: 5610469821
Enter Student Midterm: 40
Enter Student Final: 37
Enter Student ID: 5610457893
Enter Student Midterm: 10
Enter Student Final: 6
Enter Student ID: 5610475947
Enter Student Midterm: 26
Enter Student Final: 35
Enter Student ID: 5610438273
Enter Student Midterm: 30
Enter Student Final: 25
Student ID 5610456784 receives grade C.
Student ID 5610469821 receives grade B.
Student ID 5610457893 receives grade F.
Student ID 5610475947 receives grade C.
Student ID 5610438273 receives grade D.

(62)
หาค่าสูงสุดของคะแนนโดยเก็บข้อมูลใน struct
จงเขียนโปรแกรมหาค่าสูงสุด โดยให้นิยาม data type ใหม่ เป็นประเภท struct และสร้าง array ของ struct นี้ขึ้นมาโดยมีขนาด 5 elements รับข้อมูลเข้าจากผู้ใช้ โดยจะมีข้อมูล ID ของนิสิต คะแนนสอบมิดเทอมและไฟนอล จากนั้นให้เรียกฟังก์ชัน findTop ซึ่งจะหา record ที่มีคะแนนมิดเทอมสูงสุด และ record ที่มีคะแนนไฟนอลสูงสุด

จากนั้นให้พิมพ์ ID และคะแนนของนิสิตที่ได้คะแนนสูงสุดทั้งสอง ถ้านิสิตสองคนมีคะแนนเท่ากัน ให้ยึดนิสิตคนที่ผู้ใช้ใส่ข้อมูลก่อนว่าเป็นผู้ที่มีคะแนนสูงสุด

ตัวอย่างผลลัพธ์ที่ 1
Enter Student ID: 501456784
Enter Student Midterm: 26
Enter Student Final: 37
Enter Student ID: 501769821
Enter Student Midterm: 40
Enter Student Final: 37
Enter Student ID: 501567893
Enter Student Midterm: 10
Enter Student Final: 6
Enter Student ID: 501875947
Enter Student Midterm: 26
Enter Student Final: 35
Enter Student ID: 519838273
Enter Student Midterm: 30
Enter Student Final: 25
Top Score for Midterm:
Student ID 501769821 with score 40
Top Score for Final:
Student ID 501456784 with score 37

(63)
ถ้ากำหนดให้ C เป็นจำนวนเชิงซ้อนแล้ว C สามารถถูกเขียนให้อยู่ในรูปของ C = a + b i โดยที่ i^2 = -1 และหากกำหนดให้ D = c + d i แล้ว

ผลบวกระหว่าง C และ D จะมีค่าเท่ากับ a+c + b+d i
ผลคูณระหว่าง C และ D จะมีค่าเท่ากับ ac-bd + ad+bc i
จงเติมโปรแกรมข้างล่างให้สมบูรณ์เพื่อคำนวณหาค่าผลบวก (add) และผลคูณ (multiply) ของค่าจำนวนเชิงซ้อน 2 จำนวนที่รับค่าเข้ามา

ตัวอย่างผลลัพธ์ที่ 1 (Input: C = 1.0 + 2.0i และ D = 2 + 3i)
Enter C: 1.0 2.0 
Enter D: 2 3 
C + D = 3.0 + 5.0i
C x D = -4.0 + 7.0i

ตัวอย่างผลลัพธ์ที่ 2 (Input: C = 2i และ D = 3i)
Enter C: 0 2 
Enter D: 0 3 
C + D = 5.0i
C x D = -6.0

ตัวอย่างผลลัพธ์ที่ 3 (Input: C = 1 + 2i และ D = -3i)
Enter C: 1 2 
Enter D: 0 -3 
C + D = 1.0 - 1.0i
C x D = 6.0 - 3.0i

